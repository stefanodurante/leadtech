{"version":3,"sources":["assets/styles/02_tools/_mixins.scss","assets/styles/style.scss","assets/styles/03_generics/_base.scss","assets/styles/03_generics/_fonts.scss","assets/styles/03_generics/_typography.scss","assets/styles/03_generics/_helpers.scss","assets/styles/04_elements/_parags.scss","assets/styles/06_components/_button.scss","assets/styles/02_tools/_flex.scss","assets/styles/06_components/_input-text.scss","assets/styles/06_components/_article.scss","assets/styles/08_pages/_home.scss","assets/styles/01_settings/_variables.scss"],"names":[],"mappings":"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","file":"style.985d7cce.css","sourceRoot":"..","sourcesContent":["// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/*\nAuthor     : stefano\nDescription: Purpose of the stylesheet follows.\n*/\n\n\n/*********************\nBREAKPOINTS\n*********************/\n\n@mixin breakpoint($point) {\n    @if $point==desktop--lg--max {\n        @media screen and (min-width: 1380px) {\n            @content;\n        }\n    }\n    @if $point==desktop--lg {\n        @media screen and (min-width: 1140px) {\n            @content;\n        }\n    }\n    @if $point==desktop {\n        @media screen and (min-width: 1024px) {\n            @content;\n        }\n    }\n    @else if $point==tablet {\n        @media (min-width: 768px) {\n            @content;\n        }\n    }\n}\n\n\n/*********************\nTYPOGRAPHY\n*********************/\n\n@mixin font-size($sizeValue: 1.6) {\n    font-size: ($sizeValue * 10) + px;\n    font-size: $sizeValue + rem;\n}\n\n\n/*********************\nBOX-MODEL\n*********************/\n\n@mixin box-sizing($box-model) {\n    -webkit-box-sizing: $box-model; // Safari <= 5\n    -moz-box-sizing: $box-model; // Firefox <= 19\n    box-sizing: $box-model;\n}\n\n\n/* Borders */\n\n@mixin radius($radius) {\n    -webkit-border-radius: $radius;\n    -moz-border-radius: $radius;\n    -ms-border-radius: $radius;\n    border-radius: $radius;\n}","@charset 'UTF-8';\n// Configuration and helpers\n// -------------------------------\n@import '01_settings/variables';\n@import '02_tools/mixins';\n@import '02_tools/flex';\n@import '02_tools/grid';\n\n/**\n * ---------------------------------------------------\n * \tTable of contents\n * ---------------------------------------------------\n */\n\n\n/**----------\n\t3. Generic\n\t\t3.1 base\n\t\t3.2 Fonts\n\t\t3.3 Typography\n\t\t3.4 Helpers\n\t4. Elements\n\t\t4.1 Header \n\t\t4.2 Headings\n\t\t4.3 Parags\n\t\t4.4 Footer\n\t5. Objects\n\t\t5.1 Buttons\n\t6. Components\n\t\t6.1 Buttons\n\t\t6.1 Forms elements\n\t7. Utilities\n\t\t7.1 utilities\n\n\n---------------*/\n\n\n/**\n * ---------------------------------------------------\n * \t3. generic\n * ---------------------------------------------------\n */\n\n\n/* --------------------- 3.1 Base --------------------- */\n\n@import '03_generics/base';\n\n/* --------------------- 3.2 Fonts --------------------- */\n\n@import '03_generics/fonts';\n\n/* --------------------- 3.3 Typography --------------------- */\n\n@import '03_generics/typography';\n\n/* --------------------- 3.4 Helpers --------------------- */\n\n@import '03_generics/helpers';\n\n/**\n * ---------------------------------------------------\n * \t4. Elements\n * ---------------------------------------------------\n */\n\n\n/* --------------------- 4.1 Header --------------------- */\n\n@import '04_elements/header';\n\n/* --------------------- 4.2 headings --------------------- */\n\n@import '04_elements/headings';\n\n/* --------------------- 4.3 parags (texts, notes, messages) --------------------- */\n\n@import '04_elements/parags';\n\n/* --------------------- 4.4 Footer --------------------- */\n\n@import '04_elements/footer';\n\n/**\n * ---------------------------------------------------\n * \t5.  Objects\n * ---------------------------------------------------\n */\n\n\n/**\n * ---------------------------------------------------\n * \t6.  Components\n * ---------------------------------------------------\n */\n\n\n/* --------------------- 6.1 Buttons --------------------- */\n\n@import '06_components/button';\n\n/* --------------------- 6.2 Inputs --------------------- */\n\n@import '06_components/input-text';\n\n/* --------------------- 6.3 Article --------------------- */\n\n@import '06_components/article';\n\n/**\n * ---------------------------------------------------\n * \t7.  Utilities\n * ---------------------------------------------------\n */\n\n@import '07_utilities/utilities';\n\n/**\n * ---------------------------------------------------\n * \t8.  Pages\n * ---------------------------------------------------\n */\n\n\n/* --------------------- 8.1 Home Page Contoso --------------------- */\n\n@import '08_pages/home';\n","// -----------------------------------------------------------------------------\n// This file contains very basic styles.\n// -----------------------------------------------------------------------------\n\n/**\n * Set up a decent box model on the root element\n */\n\nhtml {\n    @include box-sizing(border-box);\n    font-size: 62.5%;\n}\n\nhtml,\nbody {\n    height: 100%;\n}\n\n\n/**\n * Make all elements from the DOM inherit from the parent box-sizing\n * Since `*` has a specificity of 0, it does not override the `html` value\n * making all elements inheriting from the root box-sizing value\n * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\n */\n\n*,\n*::before,\n*::after {\n    @include box-sizing(border-box);\n}\n\nbody {\n    -webkit-font-smoothing: subpixel-antialiased;\n    margin: 0;\n    padding: 0;\n}\n\n\n/**\n * Basic styles for headings\n */\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    margin: 0;\n}\n\n\n/**\n * Basic styles for links\n */\n\na {\n    text-decoration: none;\n}\n\n\n/**\n * Basic styles for forms\n */\n\nfieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n}\n\n\n/**\n * Basic styles for images\n */\n\nimg {\n    max-width: 100%;\n}\n\n\n/**\n * Basic styles for images\n */\n\npicture {\n    display: block;\n}\n\n\n/**\n * Basic styles for list\n */\n\nul,\nli {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}","// -----------------------------------------------------------------------------\n// This file contains all @font-face declarations, if any.\n// -----------------------------------------------------------------------------\n@import url('https://fonts.googleapis.com/css?family=Montserrat:700,800&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Merriweather:300,300i,400,400i,700,700i,900,900i&display=swap');\n\n$font-primary: 'Montserrat';\n$font-secondary: 'Merriweather';\n","/**\n * Basic typography style for copy text\n */\n\nbody {\n\n    font-style: normal;\n    font-weight: 400;\n}\n\na {\n  \n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-style: normal;\n    font-weight: 700;\n}\n\ndd {\n    margin-left: 25px;\n}\n",".u-show--mobile {\n    display: block;\n    @include breakpoint(tablet) {\n        display: none;\n    }\n}\n\n.u-show--tablet {\n    display: block;\n    @include breakpoint(desktop) {\n        display: none;\n    }\n}\n\n.u-show--desktop {\n    display: none;\n    @include breakpoint(desktop) {\n        display: block;\n    }\n}",".c-parag {\n\n\n    @include font-size(1.6);\n    line-height: 1.5;\n    margin: 0 0 26px;\n    @include breakpoint(desktop) {\n        @include font-size(2.4  );\n        margin-bottom: 48px;\n    }\n}\n","// -----------------------------------------------------------------------------\n// This file contains all styles related to the button component.\n// -----------------------------------------------------------------------------\n.c-button {\n    @include flexbox();\n    @include align-items(center);\n    @include justify-content(center);\n    @include font-size(1.4);\n\n    border: none;    \n    letter-spacing: 2.8px;\n    height: 45px;\n    padding: 0 22px;\n    @include breakpoint(desktop) {\n        height: 55px;\n    }\n}\n","// Flexbox Mixins\n// http://philipwalton.github.io/solved-by-flexbox/\n// https://github.com/philipwalton/solved-by-flexbox\n//\n// Copyright (c) 2013 Brian Franco\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// This is a set of mixins for those who want to mess around with flexbox\n// using the native support of current browsers. For full support table\n// check: http://caniuse.com/flexbox\n//\n// Basically this will use:\n//\n// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)\n// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)\n//\n// This was inspired by:\n//\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n//\n// With help from:\n//\n// * http://w3.org/tr/css3-flexbox/\n// * http://the-echoplex.net/flexyboxes/\n// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx\n// * http://css-tricks.com/using-flexbox/\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes\n\n//----------------------------------------------------------------------\n\n// Flexbox Containers\n//\n// The 'flex' value causes an element to generate a block-level flex\n// container box.\n//\n// The 'inline-flex' value causes an element to generate a inline-level\n// flex container box.\n//\n// display: flex | inline-flex\n//\n// http://w3.org/tr/css3-flexbox/#flex-containers\n//\n// (Placeholder selectors for each type, for those who rather @extend)\n\n@mixin flexbox {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox;\n    display: flex;\n  }\n  \n  %flexbox { @include flexbox; }\n  \n  //----------------------------------\n  \n  @mixin inline-flex {\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n  \n  %inline-flex { @include inline-flex; }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Direction\n  //\n  // The 'flex-direction' property specifies how flex items are placed in\n  // the flex container, by setting the direction of the flex container's\n  // main axis. This determines the direction that flex items are laid out in.\n  //\n  // Values: row | row-reverse | column | column-reverse\n  // Default: row\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-direction-property\n  \n  @mixin flex-direction($value: row) {\n    @if $value == row-reverse {\n      -webkit-box-direction: reverse;\n      -webkit-box-orient: horizontal;\n    } @else if $value == column {\n      -webkit-box-direction: normal;\n      -webkit-box-orient: vertical;\n    } @else if $value == column-reverse {\n      -webkit-box-direction: reverse;\n      -webkit-box-orient: vertical;\n    } @else {\n      -webkit-box-direction: normal;\n      -webkit-box-orient: horizontal;\n    }\n    -webkit-flex-direction: $value;\n    -moz-flex-direction: $value;\n    -ms-flex-direction: $value;\n    flex-direction: $value;\n  }\n  // Shorter version:\n  @mixin flex-dir($args...) { @include flex-direction($args...); }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Wrap\n  //\n  // The 'flex-wrap' property controls whether the flex container is single-line\n  // or multi-line, and the direction of the cross-axis, which determines\n  // the direction new lines are stacked in.\n  //\n  // Values: nowrap | wrap | wrap-reverse\n  // Default: nowrap\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-wrap-property\n  \n  @mixin flex-wrap($value: nowrap) {\n    // No Webkit Box fallback.\n    -webkit-flex-wrap: $value;\n    -moz-flex-wrap: $value;\n    @if $value == nowrap {\n      -ms-flex-wrap: none;\n    } @else {\n      -ms-flex-wrap: $value;\n    }\n    flex-wrap: $value;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Flow (shorthand)\n  //\n  // The 'flex-flow' property is a shorthand for setting the 'flex-direction'\n  // and 'flex-wrap' properties, which together define the flex container's\n  // main and cross axes.\n  //\n  // Values: <flex-direction> | <flex-wrap>\n  // Default: row nowrap\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-flow-property\n  \n  @mixin flex-flow($values: (row nowrap)) {\n    // No Webkit Box fallback.\n    -webkit-flex-flow: $values;\n    -moz-flex-flow: $values;\n    -ms-flex-flow: $values;\n    flex-flow: $values;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Order\n  //\n  // The 'order' property controls the order in which flex items appear within\n  // their flex container, by assigning them to ordinal groups.\n  //\n  // Default: 0\n  //\n  // http://w3.org/tr/css3-flexbox/#order-property\n  \n  @mixin order($int: 0) {\n    -webkit-box-ordinal-group: $int + 1;\n    -webkit-order: $int;\n    -moz-order: $int;\n    -ms-flex-order: $int;\n    order: $int;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Grow\n  //\n  // The 'flex-grow' property sets the flex grow factor. Negative numbers\n  // are invalid.\n  //\n  // Default: 0\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-grow-property\n  \n  @mixin flex-grow($int: 0) {\n    -webkit-box-flex: $int;\n    -webkit-flex-grow: $int;\n    -moz-flex-grow: $int;\n    -ms-flex-positive: $int;\n    flex-grow: $int;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Shrink\n  //\n  // The 'flex-shrink' property sets the flex shrink factor. Negative numbers\n  // are invalid.\n  //\n  // Default: 1\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-shrink-property\n  \n  @mixin flex-shrink($int: 1) {\n    -webkit-flex-shrink: $int;\n    -moz-flex-shrink: $int;\n    -ms-flex-negative: $int;\n    flex-shrink: $int;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Basis\n  //\n  // The 'flex-basis' property sets the flex basis. Negative lengths are invalid.\n  //\n  // Values: Like \"width\"\n  // Default: auto\n  //\n  // http://www.w3.org/TR/css3-flexbox/#flex-basis-property\n  \n  @mixin flex-basis($value: auto) {\n    -webkit-flex-basis: $value;\n    -moz-flex-basis: $value;\n    -ms-flex-preferred-size: $value;\n    flex-basis: $value;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox \"Flex\" (shorthand)\n  //\n  // The 'flex' property specifies the components of a flexible length: the\n  // flex grow factor and flex shrink factor, and the flex basis. When an\n  // element is a flex item, 'flex' is consulted instead of the main size\n  // property to determine the main size of the element. If an element is\n  // not a flex item, 'flex' has no effect.\n  //\n  // Values: none | <flex-grow> <flex-shrink> || <flex-basis>\n  // Default: See individual properties (1 1 0).\n  //\n  // http://w3.org/tr/css3-flexbox/#flex-property\n  \n  @mixin flex($fg: 1, $fs: null, $fb: null) {\n  \n    // Set a variable to be used by box-flex properties\n    $fg-boxflex: $fg;\n  \n    // Box-Flex only supports a flex-grow value so let's grab the\n    // first item in the list and just return that.\n    @if type-of($fg) == 'list' {\n      $fg-boxflex: nth($fg, 1);\n    }\n  \n    -webkit-box-flex: $fg-boxflex;\n    -webkit-flex: $fg $fs $fb;\n    -moz-box-flex: $fg-boxflex;\n    -moz-flex: $fg $fs $fb;\n    -ms-flex: $fg $fs $fb;\n    flex: $fg $fs $fb;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Justify Content\n  //\n  // The 'justify-content' property aligns flex items along the main axis\n  // of the current line of the flex container. This is done after any flexible\n  // lengths and any auto margins have been resolved. Typically it helps distribute\n  // extra free space leftover when either all the flex items on a line are\n  // inflexible, or are flexible but have reached their maximum size. It also\n  // exerts some control over the alignment of items when they overflow the line.\n  //\n  // Note: 'space-*' values not supported in older syntaxes.\n  //\n  // Values: flex-start | flex-end | center | space-between | space-around\n  // Default: flex-start\n  //\n  // http://w3.org/tr/css3-flexbox/#justify-content-property\n  \n  @mixin justify-content($value: flex-start) {\n    @if $value == flex-start {\n      -webkit-box-pack: start;\n      -ms-flex-pack: start;\n    } @else if $value == flex-end {\n      -webkit-box-pack: end;\n      -ms-flex-pack: end;\n    } @else if $value == space-between {\n      -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n    } @else if $value == space-around {\n      -ms-flex-pack: distribute;\n    } @else {\n      -webkit-box-pack: $value;\n      -ms-flex-pack: $value;\n    }\n    -webkit-justify-content: $value;\n    -moz-justify-content: $value;\n    justify-content: $value;\n  }\n  // Shorter version:\n  @mixin flex-just($args...) { @include justify-content($args...); }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Align Items\n  //\n  // Flex items can be aligned in the cross axis of the current line of the\n  // flex container, similar to 'justify-content' but in the perpendicular\n  // direction. 'align-items' sets the default alignment for all of the flex\n  // container's items, including anonymous flex items. 'align-self' allows\n  // this default alignment to be overridden for individual flex items. (For\n  // anonymous flex items, 'align-self' always matches the value of 'align-items'\n  // on their associated flex container.)\n  //\n  // Values: flex-start | flex-end | center | baseline | stretch\n  // Default: stretch\n  //\n  // http://w3.org/tr/css3-flexbox/#align-items-property\n  \n  @mixin align-items($value: stretch) {\n    @if $value == flex-start {\n      -webkit-box-align: start;\n      -ms-flex-align: start;\n    } @else if $value == flex-end {\n      -webkit-box-align: end;\n      -ms-flex-align: end;\n    } @else {\n      -webkit-box-align: $value;\n      -ms-flex-align: $value;\n    }\n    -webkit-align-items: $value;\n    -moz-align-items: $value;\n    align-items: $value;\n  }\n  \n  //----------------------------------\n  \n  // Flexbox Align Self\n  //\n  // Values: auto | flex-start | flex-end | center | baseline | stretch\n  // Default: auto\n  \n  @mixin align-self($value: auto) {\n    // No Webkit Box Fallback.\n    -webkit-align-self: $value;\n    -moz-align-self: $value;\n    @if $value == flex-start {\n      -ms-flex-item-align: start;\n    } @else if $value == flex-end {\n      -ms-flex-item-align: end;\n    } @else {\n      -ms-flex-item-align: $value;\n    }\n    align-self: $value;\n  }\n  \n  //----------------------------------------------------------------------\n  \n  // Flexbox Align Content\n  //\n  // The 'align-content' property aligns a flex container's lines within the\n  // flex container when there is extra space in the cross-axis, similar to\n  // how 'justify-content' aligns individual items within the main-axis. Note,\n  // this property has no effect when the flexbox has only a single line.\n  //\n  // Values: flex-start | flex-end | center | space-between | space-around | stretch\n  // Default: stretch\n  //\n  // http://w3.org/tr/css3-flexbox/#align-content-property\n  \n  @mixin align-content($value: stretch) {\n    // No Webkit Box Fallback.\n    -webkit-align-content: $value;\n    -moz-align-content: $value;\n    @if $value == flex-start {\n      -ms-flex-line-pack: start;\n    } @else if $value == flex-end {\n      -ms-flex-line-pack: end;\n    } @else {\n      -ms-flex-line-pack: $value;\n    }\n    align-content: $value;\n  }\n",".c-input-text {\n    @include font-size(1.6);\n    border: none;\n    height: 45px;\n    padding-left: 11px;\n    width: 100%;\n    @include breakpoint(desktop) {\n        @include font-size(2.0);\n        height: 55px;\n    }\n}\n",".c-article {\n    @include breakpoint(tablet) {\n        @include flexbox();\n        @include align-items(flex-end);\n        @include justify-content(space-between);\n        @include align-items(flex-end);\n        width: 100%;\n    }\n    @include breakpoint(desktop) {\n        @include align-items(flex-start);\n        @include justify-content(flex-start);\n    }\n}\n\n.c-article__content {\n    @include breakpoint(tablet) {\n        text-align: left;\n        max-width: 360px;\n    }\n    @include breakpoint(desktop) {\n        max-width: 600px;\n        margin-top: 92px;\n        margin-left: 95px;\n    }\n    @include breakpoint(desktop--lg) {\n        margin-top: 100px;\n        margin-left: 167px;\n    }\n}","// -----------------------------------------------------------------------------\n// This file contains styles that are specific to the home page.\n// --\nbody {\n    background: $bg-color;\n    color: $primary-color;\n    text-align: center;\n    font-family: $font-secondary;\n}\n\n.c-wrapp {\n    height: 100%;\n    @include breakpoint(desktop) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n    }\n}\n\n.c-main {\n    margin: 0 auto;\n    /*max-width: 1140px;*/\n    width: 100%;\n    @include breakpoint(desktop) {\n        @include flexbox();\n        @include align-items(center);\n        @include justify-content(center);\n    }\n}\n\n.c-section {\n    height: 506px;\n    @include breakpoint(desktop) {\n        height: 672px;\n        width: 384px;\n    }\n    &__trip {\n        height: 460px;\n        @include breakpoint(desktop) {\n            height: 672px;\n            width: 328px;\n        }\n    }\n    &__moonwalker {\n        height: 280px;\n        @include breakpoint(desktop) {\n            height: 672px;\n            width: 700px;\n        }\n    }\n}\n\n.c-article {\n    @include flexbox();\n    @include flex-direction(column);\n    background-repeat: no-repeat;\n    height: 100%;\n    &__visa {\n        background-image: url(./../images/rock.jpg), url(./../images/rocket.png);\n        background-size: 100% 150px, auto 100%;\n        background-position: top center, 35% 150px;\n        padding: 6.5rem 4rem 4rem;\n        @include breakpoint(desktop) {\n            background-image: url(./../images/rock.jpg);\n            background-size: cover;\n            background-position: right top;\n            position: relative;\n        }\n    }\n    &__trip {\n        @include align-items(flex-start);\n        @include justify-content(flex-end);\n        background-image: url(./../images/background.jpg);\n        background-position: 25% center;\n        background-size: auto 230%;\n        padding: 0 2rem;\n        position: relative;\n        text-align: left;\n        z-index: 1;\n        &:before {\n            content: '';\n            background: rgba(0, 0, 0, 0.1);\n            left: 0;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            width: 100%;\n            z-index: 1;\n        }\n        @include breakpoint(desktop) {\n            &:after {\n                content: '';\n                background-image: url(./../images/background.jpg);\n                background-size: 300% auto;\n                background-position: left -5rem;\n                background-repeat: no-repeat;\n                height: 480px;\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n            }\n            @include justify-content(flex-start);\n            background-image: url(./../images/background.jpg);\n            background-size: auto 106%;\n            background-position: left bottom;\n        }\n    }\n    &__moonwalker {\n        background-image: url(./../images/background.jpg);\n        background-position: -210px bottom;\n        background-size: 400%;\n        @include breakpoint(desktop) {\n            @include flexbox();\n            @include flex-direction(column);\n            @include justify-content(flex-end);\n            @include align-items(flex-start);\n            background-position: right bottom;\n            background-size: 150% auto;\n            position: relative;\n            z-index: 1;\n            width: 700px;\n            &:before,\n            &:after {\n                background-repeat: no-repeat;\n                position: absolute;\n                top: 0;\n            }\n            &:before {\n                content: '';\n                background-image: url(./../images/background.jpg);\n                background-position: center -5rem;\n                background-size: auto 150%;\n                height: 480px;\n                left: 0;\n                width: 330px;\n            }\n            // &:after {\n            //     content: '';\n            //     background-image: url(./../images/rocket.png);\n            //     background-position: center top;\n            //     background-size: auto 480px;\n            //     height: 100%;\n            //     left: 330px;\n            //     width: calc(100% - 330px);\n            // }\n        }\n    }\n}\n\n.c-h1 {\n    @include font-size(4);\n    margin-top: auto;\n    font-family: $font-primary;\n    font-weight: 700;\n    line-height: 90%;\n    text-align: left;\n    @include breakpoint(desktop) {\n        @include font-size(8);\n        left: 28rem;\n        position: absolute;\n        top: 48%;\n        white-space: nowrap;\n        z-index: 2;\n    }\n}\n\n.c-h2 {\n    @include font-size(2.5);\n    line-height: 168%;\n    font-weight: 600\n}\n\n.c-logo {\n    background-image: url('./../images/logo.png');\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 140px;\n    width: 140px;\n    margin: 0 auto;\n    @include breakpoint(tablet) {\n        height: 200px;\n        width: 200px;\n        margin-left: 10rem;\n    }\n}\n\n.c-icon__rocket {\n    position: relative;\n    z-index: 2;\n    &:before,\n    &:after {\n        content: '';\n        left: -3px;\n        position: absolute;\n        width: 99px;\n    }\n    &:before {\n        background-image: url('./../images/icon_rocket.png');\n        height: 97px;\n        top: -95px;\n    }\n    &:after {\n        background: $secondary-color;\n        bottom: -3px;\n        height: 3px;\n        width: 94px;\n    }\n    @include breakpoint(desktop) {\n        margin-top: 14rem;\n    }\n}\n\n.c-tags__list {\n    @include flexbox();\n    @include flex-wrap(wrap);\n    margin-top: 1.8rem;\n    margin-bottom: 9.5rem;\n    z-index: 2;\n}\n\n.c-tag__item {\n    @include font-size(2);\n    font-style: italic;\n    margin-right: .5ch;\n}\n\n.c-slider-controls {\n    @include breakpoint(desktop) {\n        @include flexbox();\n        @include flex-direction(column);\n        @include align-items(flex-start);\n        background: $secondary-bg;\n        height: 260px;\n        padding: 7rem 5rem 2.4rem;\n        margin-bottom: -6.8rem;\n        width: 330px;\n    }\n}\n\n.c-loading {\n    background: $primary-color;\n    height: 3px;\n    position: relative;\n    margin: 0 auto;\n    width: 90%;\n}\n\n.c-bar {\n    background: $secondary-color;\n    height: 3px;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 30%;\n}\n\n.c-nav {\n    margin-top: auto;\n    width: 100%;\n}\n\n.c-nav__list {\n    @include flexbox();\n    @include justify-content(space-between);\n}\n\n.c-nav__item {\n    @include font-size(1.8);\n}\n\n.c-nav__link {\n    color: $primary-color;\n    display: block;\n    line-height: 3rem;\n    position: relative;\n    &:hover {\n        color: $secondary-color;\n    }\n}\n\n.c-nav__link-ease {\n    &:after {\n        content: '';\n        position: absolute;\n        bottom: -3px;\n        height: 3px;\n        left: 0;\n        width: 100%;\n        background: $primary-color;\n    }\n    &:hover {\n        &:after {\n            background: $secondary-color;\n        }\n    }\n}\n\n.c-slider {\n    @include breakpoint(desktop) {\n        height: 480px;\n        left: 0;\n        overflow: hidden;\n        position: absolute;\n        top: 0;\n        width: 100%;\n    }\n}\n\n.c-img__wrapper {\n    height: 100%;\n    width: 100%;\n}\n\n.c-img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n\n.slide-entry {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    text-align: center;\n    z-index: 20;\n    opacity: 0;\n    visibility: hidden;\n    transition: 300ms;\n    &.active {\n        opacity: 1;\n        visibility: visible;\n    }\n}","// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass variables.\n// -----------------------------------------------------------------------------\n// Base colors\n$bg-color:#205E5D;\n$primary-color:white;\n$secondary-color:#19BD9C;\n$secondary-bg:#252839"]}